{"version":3,"sources":["components/ProductList.js","components/Products.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["ProductList","props","className","name","price","qty","onClick","addItems","disabled","disable","removeItems","removeWholeItem","Products","class","scope","totalQty","items","map","item","key","id","Cart","order_total","totalPrice","App","state","discount","type","img_url","updatedItems","setState","concat","toast","success","filter","position","autoClose","hideProgressBar","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e16cf25b.chunk.js","sourcesContent":["import React from 'react';\nimport './ProductList.css';\n\nconst ProductList = (props) => {\n\n  return (\n\n    <tr>\n      <td className=\"Label\">{props.name}</td>\n      <td>{props.price} Rs</td>\n      <td>{props.qty}</td>\n      <td><button className='btn btn-primary' onClick={props.addItems}>More</button></td>\n      <td><button disabled={props.disable} className=\"btn btn-secondary\" onClick={props.removeItems}>Less</button></td>\n      <td><button className='btn btn-danger' onClick={props.removeWholeItem}>Delete</button></td>\n    </tr>\n  )\n\n\n}\n\nexport default ProductList;","import React from 'react';\nimport './Products.css';\nimport ProductList from './ProductList';\n\n\nconst Products = (props) => {\n\n  return (\n\n    <div className=\"products\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Items({props.totalQty})</th>\n            <th scope=\"col\">Price</th>\n            <th scope=\"col\">Qty</th>\n            <th scope=\"col\">Inc. Qty</th>\n            <th scope=\"col\">Dec. Qty</th>\n            <th scope=\"col\">Remove</th>\n          </tr>\n        </thead>\n\n\n        <tbody>\n          {props.items.map(item =>\n            <ProductList\n              key={item.id}\n              name={item.name}\n              addItems={() => props.addItems(item.id)}\n              removeItems={() => props.removeItems(item.id)}\n              disable={item.disable}\n              qty={item.qty}\n              price={item.price}\n              removeWholeItem={() => props.removeWholeItem(item.id)}\n            />\n          )}\n        </tbody>\n\n        <tr>\n          <td className=\"Label\">Total</td>\n          <td>2760 Rs</td>\n          <td>{props.totalQty}</td>\n          <td></td>\n          <td></td>\n          <td></td>\n        </tr>\n\n      </table>\n\n    </div>\n  );\n}\n\nexport default Products;","import React from 'react';\nimport './Cart.css';\n\nconst Cart = (props) => {\n\n\n  let order_total, totalPrice;\n  if (props.totalQty !== 0) {\n    totalPrice = props.totalPrice + '.00 Rs';\n    order_total = props.totalPrice + ' Rs';\n  } else {\n    totalPrice = '0.00 Rs';\n    order_total = '0.00 Rs';\n  }\n\n\n  return (\n    <div className=\"body\">\n      <b className=\"total\">Total</b>\n\n      <hr />\n\n      <p>Items({props.totalQty}):&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;{totalPrice}</p>\n      <hr />\n\n      <p><b>Order total</b>:&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;&nbsp;&nbsp;{order_total}</p>\n    </div>\n  )\n\n}\n\nexport default Cart;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Products from \"./components/Products\";\nimport Cart from \"./components/Cart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from 'react-toastify';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      items: [\n        {\n          id: 9090,\n          name: \"Item1\",\n          price: 200,\n          discount: 10,\n          type: \"fiction\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9091,\n          name: \"Item2\",\n          price: 250,\n          discount: 15,\n          type: \"literature\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9092,\n          name: \"Item3\",\n          price: 320,\n          discount: 5,\n          type: \"literature\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9093,\n          name: \"Item4\",\n          price: 290,\n          discount: 0,\n          type: \"thriller\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9094,\n          name: \"Item5\",\n          price: 500,\n          discount: 25,\n          type: \"thriller\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9095,\n          name: \"Item6\",\n          price: 150,\n          discount: 5,\n          type: \"literature\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9096,\n          name: \"Item7\",\n          price: 700,\n          discount: 22,\n          type: \"literature\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n        {\n          id: 9097,\n          name: \"Item8\",\n          price: 350,\n          discount: 18,\n          type: \"fiction\",\n          qty: 1,\n          img_url: \"https://place-hold.it/40.jpg\",\n        },\n      ],\n      totalPrice: 2760,\n      totalQty: 8,\n    };\n\n    this.addItems = (id) => {\n      const updatedItems = this.state.items.map((item) => {\n        if (item.id === id) {\n          item.qty++;\n          item.disable = false;\n\n          this.setState({\n            totalQty: this.state.totalQty + 1,\n            totalPrice: this.state.totalPrice + item.price,\n          });\n        }\n        return item;\n      });\n\n      this.setState({\n        items: [].concat(updatedItems),\n      });\n    };\n\n    this.removeItems = (id) => {\n      const updatedItems = this.state.items.map((item) => {\n        if (item.id === id) {\n          if (item.qty > 0) {\n            item.qty--;\n            toast.success('Item Removed!!');\n            this.setState({\n              totalPrice: this.state.totalPrice - item.price,\n              totalQty: this.state.totalQty - 1,\n            });\n          }\n          if (item.qty === 0) {\n            item.disable = true;\n          }\n        }\n        return item;\n      });\n\n      this.setState({\n        items: [].concat(updatedItems),\n      });\n    };\n\n    this.removeWholeItem = (id) => {\n      const updatedItems = this.state.items.filter((item) => {\n        if (item.qty > 0 && item.id === id) {\n          toast.success('Whole Item Removed!!');\n          this.setState({\n            totalPrice: this.state.totalPrice - item.price * item.qty,\n            totalQty: this.state.totalQty - item.qty,\n          });\n        }\n\n        return item.id !== id;\n      });\n\n      this.setState({\n        items: [].concat(updatedItems),\n      });\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover />\n        <div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <Products\n                removeItems={this.removeItems}\n                addItems={this.addItems}\n                totalPrice={this.state.totalPrice}\n                totalQty={this.state.totalQty}\n                items={this.state.items}\n                removeWholeItem={this.removeWholeItem}\n              />\n            </div>\n            <div className=\"col-md-4\">\n              <Cart\n                totalPrice={this.state.totalPrice}\n                totalQty={this.state.totalQty}\n                items={this.state.items}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}